import streamlit as st
import plotly.graph_objects as go
from binance.consulta_publica import obter_dados_mercado, obter_historico

st.set_page_config(page_title="ğŸ§  DecisÃµes EstratÃ©gicas", layout="wide")
st.title("ğŸ§  DecisÃµes EstratÃ©gicas com Base em Indicadores")

# Escolha da moeda
moeda = st.selectbox("Ativo para anÃ¡lise", ["BTCUSDT", "ETHUSDT", "BNBUSDT", "SOLUSDT"])

# Obter dados pÃºblicos
dados = obter_dados_mercado(moeda)
historico = obter_historico(moeda)

if dados and historico:
    # CÃ¡lculo de mÃ©dia mÃ³vel simples (Ãºltimas 24h)
    if "price" in dados:
        preco_atual = dados["price"]
    else:
        st.warning("NÃ£o foi possÃ­vel obter o preÃ§o atual para anÃ¡lise.")
        st.stop()

    if historico:
        media_24h = sum(historico) / len(historico)
    else:
        st.warning("NÃ£o foi possÃ­vel obter o histÃ³rico para anÃ¡lise.")
        st.stop()

    delta = preco_atual - media_24h
    forca = f"{(delta / media_24h) * 100:.2f}%"

    if delta > 0:
        tendencia = "Alta"
        texto = "ğŸ“ˆ A tendÃªncia atual Ã© de alta com base na mÃ©dia das Ãºltimas 24h."
    elif delta < 0:
        tendencia = "Baixa"
        texto = "ğŸ“‰ A tendÃªncia atual Ã© de baixa com base na mÃ©dia das Ãºltimas 24h."
    else:
        tendencia = "EstÃ¡vel"
        texto = "ğŸ”„ O preÃ§o estÃ¡ estÃ¡vel em relaÃ§Ã£o Ã  mÃ©dia das Ãºltimas 24h."

    # Exibir recomendaÃ§Ã£o
    st.subheader("ğŸ“Œ RecomendaÃ§Ã£o EstratÃ©gica")
    st.success(texto)
    st.metric(label="TendÃªncia", value=tendencia, delta=forca)

    # Exibir grÃ¡fico
    fig = go.Figure()
    fig.add_trace(go.Scatter(y=historico, mode="lines", name="PreÃ§o"))
    fig.update_layout(title="ğŸ“‰ HistÃ³rico de PreÃ§o (Ãºltimas 24h)", xaxis_title="Horas", yaxis_title="PreÃ§o")
    st.plotly_chart(fig, use_container_width=True)
else:
    st.warning("NÃ£o foi possÃ­vel obter os dados para anÃ¡lise.")

